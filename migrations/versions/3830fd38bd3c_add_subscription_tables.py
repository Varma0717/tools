"""Add subscription tables

Revision ID: 3830fd38bd3c
Revises: 
Create Date: 2025-08-04 19:06:05.357004

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3830fd38bd3c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('business_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_date', sa.Date(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('metric_category', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('criteria', sa.JSON(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('page_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_slug', sa.String(length=255), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('last_viewed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('page_slug')
    )
    op.create_table('subscribers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('subscribed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('billing_cycle', sa.String(length=20), nullable=False),
    sa.Column('max_daily_usage', sa.Integer(), nullable=True),
    sa.Column('max_reports', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tool_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('total_uses', sa.Integer(), nullable=True),
    sa.Column('anonymous_uses', sa.Integer(), nullable=True),
    sa.Column('registered_uses', sa.Integer(), nullable=True),
    sa.Column('premium_uses', sa.Integer(), nullable=True),
    sa.Column('limit_blocks', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key_name', sa.String(length=100), nullable=False),
    sa.Column('api_key', sa.String(length=64), nullable=False),
    sa.Column('api_secret', sa.String(length=128), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('daily_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_limit', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('api_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.String(length=100), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('usage_date', sa.Date(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crm_dashboard_widgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('widget_type', sa.String(length=50), nullable=False),
    sa.Column('widget_config', sa.JSON(), nullable=True),
    sa.Column('position_x', sa.Integer(), nullable=True),
    sa.Column('position_y', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('channel', sa.String(length=50), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('resolution', sa.Text(), nullable=True),
    sa.Column('satisfaction_rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('interest_level', sa.Integer(), nullable=True),
    sa.Column('estimated_value', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_contact', sa.DateTime(), nullable=True),
    sa.Column('next_followup', sa.DateTime(), nullable=True),
    sa.Column('converted_user_id', sa.Integer(), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['user.id'], ),
    sa.ForeignKeyConstraint(['converted_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tool_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('tool_category', sa.String(length=50), nullable=False),
    sa.Column('usage_date', sa.Date(), nullable=True),
    sa.Column('usage_time', sa.DateTime(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('usage_date', sa.Date(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_behavior',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('page_url', sa.String(length=500), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=True),
    sa.Column('tool_name', sa.String(length=100), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('browser', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('referrer', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_segment_membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['segment_id'], ['customer_segments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('trial_end_date', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_table('campaign_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_name', sa.String(length=255), nullable=False),
    sa.Column('campaign_type', sa.String(length=50), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('medium', sa.String(length=100), nullable=True),
    sa.Column('campaign', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('conversion_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lead_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('scheduled_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_subscription')
    op.drop_table('order')
    with op.batch_alter_table('subscriber', schema=None) as batch_op:
        batch_op.drop_index('email')

    op.drop_table('subscriber')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index('slug')

    op.drop_table('post')
    with op.batch_alter_table('categories_new', schema=None) as batch_op:
        batch_op.drop_index('idx_category_active')
        batch_op.drop_index('idx_category_slug')
        batch_op.drop_index('name')
        batch_op.drop_index('slug')

    op.drop_table('categories_new')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index('idx_category_active')
        batch_op.drop_index('idx_category_slug')
        batch_op.drop_index('slug')
        batch_op.create_index(batch_op.f('ix_categories_slug'), ['slug'], unique=True)

    with op.batch_alter_table('contact_message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip', sa.String(length=45), nullable=True))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.drop_column('subject')
        batch_op.drop_column('is_read')

    with op.batch_alter_table('download', schema=None) as batch_op:
        batch_op.add_column(sa.Column('download_url', sa.String(length=200), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('file_name',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.drop_constraint('download_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('file_path')
        batch_op.drop_column('download_count')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('amount',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)

    with op.batch_alter_table('post_categories', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'categories', ['category_id'], ['id'])
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])

    with op.batch_alter_table('post_tags', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'tags', ['tag_id'], ['id'])
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('featured_image',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.drop_index('idx_post_featured')
        batch_op.drop_index('idx_post_published')
        batch_op.drop_index('idx_post_slug')
        batch_op.drop_index('idx_post_status')
        batch_op.drop_index('idx_post_title')
        batch_op.drop_index('slug')
        batch_op.create_index('idx_post_featured_status', ['is_featured', 'status'], unique=False)
        batch_op.create_index('idx_post_priority_published', ['priority', 'published_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_is_featured'), ['is_featured'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_published_at'), ['published_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_posts_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_posts_title'), ['title'], unique=False)
        batch_op.create_foreign_key(None, 'user', ['author_id'], ['id'])

    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.add_column(sa.Column('key', sa.String(length=100), nullable=False))
        batch_op.drop_index('key_name')
        batch_op.create_unique_constraint(None, ['key'])
        batch_op.drop_column('category')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('key_name')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index('idx_tag_slug')
        batch_op.drop_index('slug')
        batch_op.create_index(batch_op.f('ix_tags_slug'), ['slug'], unique=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('email')
        batch_op.drop_index('idx_email')
        batch_op.drop_index('idx_username')
        batch_op.drop_index('username')
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.create_index('username', ['username'], unique=True)
        batch_op.create_index('idx_username', ['username'], unique=False)
        batch_op.create_index('idx_email', ['email'], unique=False)
        batch_op.create_index('email', ['email'], unique=True)

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_slug'))
        batch_op.create_index('slug', ['slug'], unique=True)
        batch_op.create_index('idx_tag_slug', ['slug'], unique=False)

    with op.batch_alter_table('setting', schema=None) as batch_op:
        batch_op.add_column(sa.Column('key_name', mysql.VARCHAR(length=255), nullable=False))
        batch_op.add_column(sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=True))
        batch_op.add_column(sa.Column('category', mysql.VARCHAR(length=100), server_default=sa.text("'general'"), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('key_name', ['key_name'], unique=True)
        batch_op.drop_column('key')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_posts_title'))
        batch_op.drop_index(batch_op.f('ix_posts_status'))
        batch_op.drop_index(batch_op.f('ix_posts_slug'))
        batch_op.drop_index(batch_op.f('ix_posts_published_at'))
        batch_op.drop_index(batch_op.f('ix_posts_is_featured'))
        batch_op.drop_index(batch_op.f('ix_posts_created_at'))
        batch_op.drop_index('idx_post_priority_published')
        batch_op.drop_index('idx_post_featured_status')
        batch_op.create_index('slug', ['slug'], unique=True)
        batch_op.create_index('idx_post_title', ['title'], unique=False)
        batch_op.create_index('idx_post_status', ['status'], unique=False)
        batch_op.create_index('idx_post_slug', ['slug'], unique=False)
        batch_op.create_index('idx_post_published', ['published_at'], unique=False)
        batch_op.create_index('idx_post_featured', ['is_featured'], unique=False)
        batch_op.alter_column('featured_image',
               existing_type=sa.String(length=500),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)

    with op.batch_alter_table('post_tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('post_categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('amount',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=True)

    with op.batch_alter_table('download', schema=None) as batch_op:
        batch_op.add_column(sa.Column('download_count', mysql.INTEGER(display_width=11), server_default=sa.text('0'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_path', mysql.VARCHAR(length=500), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('download_ibfk_1', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('file_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.drop_column('download_url')

    with op.batch_alter_table('contact_message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_read', mysql.TINYINT(display_width=1), server_default=sa.text('0'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('subject', mysql.VARCHAR(length=255), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('ip')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_slug'))
        batch_op.create_index('slug', ['slug'], unique=True)
        batch_op.create_index('idx_category_slug', ['slug'], unique=False)
        batch_op.create_index('idx_category_active', ['is_active'], unique=False)

    op.create_table('categories_new',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('slug', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('color', mysql.VARCHAR(length=7), server_default=sa.text("'#3B82F6'"), nullable=True),
    sa.Column('icon', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('sort_order', mysql.INTEGER(display_width=11), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('meta_description', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('categories_new', schema=None) as batch_op:
        batch_op.create_index('slug', ['slug'], unique=True)
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.create_index('idx_category_slug', ['slug'], unique=False)
        batch_op.create_index('idx_category_active', ['is_active'], unique=False)

    op.create_table('post',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('title', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('content', mysql.TEXT(), nullable=True),
    sa.Column('slug', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('author_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('is_featured', mysql.TINYINT(display_width=1), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('is_published', mysql.TINYINT(display_width=1), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name='post_ibfk_1', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index('slug', ['slug'], unique=True)

    op.create_table('subscriber',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('subscribed_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.Column('unsubscribed_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('subscriber', schema=None) as batch_op:
        batch_op.create_index('email', ['email'], unique=True)

    op.create_table('order',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('status', mysql.VARCHAR(length=50), server_default=sa.text("'pending'"), nullable=True),
    sa.Column('total_amount', mysql.DECIMAL(precision=10, scale=2), server_default=sa.text('0.00'), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='order_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('user_subscription',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('plan_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('status', mysql.VARCHAR(length=50), server_default=sa.text("'active'"), nullable=True),
    sa.Column('started_at', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.Column('expires_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_subscription_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('lead_activities')
    op.drop_table('campaign_tracking')
    op.drop_table('user_subscriptions')
    op.drop_table('user_segment_membership')
    op.drop_table('user_behavior')
    op.drop_table('usage_tracking')
    op.drop_table('tool_usage')
    op.drop_table('subscriptions')
    op.drop_table('leads')
    op.drop_table('customer_interactions')
    op.drop_table('crm_dashboard_widgets')
    op.drop_table('api_usage')
    op.drop_table('api_keys')
    op.drop_table('tool_analytics')
    op.drop_table('subscription_plans')
    op.drop_table('subscribers')
    op.drop_table('page_views')
    op.drop_table('customer_segments')
    op.drop_table('business_metrics')
    # ### end Alembic commands ###
